
%% bare_conf.tex
%% V1.4a
%% 2014/09/17
%% by Michael Shell
%% See:
%% http://www.michaelshell.org/
%% for current contact information.
%%
%% This is a skeleton file demonstrating the use of IEEEtran.cls
%% (requires IEEEtran.cls version 1.8a or later) with an IEEE
%% conference paper.
%%
%% Support sites:
%% http://www.michaelshell.org/tex/ieeetran/
%% http://www.ctan.org/tex-archive/macros/latex/contrib/IEEEtran/
%% and
%% http://www.ieee.org/

%%*************************************************************************
%% Legal Notice:
%% This code is offered as-is without any warranty either expressed or
%% implied; without even the implied warranty of MERCHANTABILITY or
%% FITNESS FOR A PARTICULAR PURPOSE! 
%% User assumes all risk.
%% In no event shall IEEE or any contributor to this code be liable for
%% any damages or losses, including, but not limited to, incidental,
%% consequential, or any other damages, resulting from the use or misuse
%% of any information contained here.
%%
%% All comments are the opinions of their respective authors and are not
%% necessarily endorsed by the IEEE.
%%
%% This work is distributed under the LaTeX Project Public License (LPPL)
%% ( http://www.latex-project.org/ ) version 1.3, and may be freely used,
%% distributed and modified. A copy of the LPPL, version 1.3, is included
%% in the base LaTeX documentation of all distributions of LaTeX released
%% 2003/12/01 or later.
%% Retain all contribution notices and credits.
%% ** Modified files should be clearly indicated as such, including  **
%% ** renaming them and changing author support contact information. **
%%
%% File list of work: IEEEtran.cls, IEEEtran_HOWTO.pdf, bare_adv.tex,
%%                    bare_conf.tex, bare_jrnl.tex, bare_conf_compsoc.tex,
%%                    bare_jrnl_compsoc.tex, bare_jrnl_transmag.tex
%%*************************************************************************


% *** Authors should verify (and, if needed, correct) their LaTeX system  ***
% *** with the testflow diagnostic prior to trusting their LaTeX platform ***
% *** with production work. IEEE's font choices and paper sizes can       ***
% *** trigger bugs that do not appear when using other class files.       ***                          ***
% The testflow support page is at:
% http://www.michaelshell.org/tex/testflow/



\documentclass[conference]{Trabalho_1}
\usepackage{graphicx, url, epsfig, subfigure}
\usepackage{amsmath, amscd, amsthm, amsxtra}

\usepackage[brazil]{babel}   
\usepackage[latin1]{inputenc}
\usepackage{listings}
\usepackage{color}

\definecolor{mygreen}{rgb}{0,0.6,0}
\definecolor{mygray}{rgb}{0.5,0.5,0.5}
\definecolor{mymauve}{rgb}{0.58,0,0.82}
\definecolor{myyellow}{rgb}{1,1,0.9}
\definecolor{mybackground}{rgb}{0.4,0.1,0.3}

\lstset{ %
  % choose the background color; you must add \usepackage{color} or \usepackage{xcolor}
  backgroundcolor=\color{myyellow},
  % the size of the fonts that are used for the code
  basicstyle=\ttfamily\scriptsize,
  % sets if automatic breaks should only happen at whitespace
  breakatwhitespace=false,
  % sets automatic line breaking
  breaklines=false,
  % sets the caption-position to bottom
  captionpos=b,
  % comment style
  commentstyle=\color{mygreen},
  % comment style
  deletekeywords={...},
  % if you want to add LaTeX within your code
  escapeinside={\%*}{*)},
  % lets you use non-ASCII characters; for 8-bits encodings only, does not work with UTF-8
  extendedchars=true,
  % adds a frame around the code
  frame=single,
  % keeps spaces in text, useful for keeping indentation of code (possibly needs columns=flexible)
  keepspaces=true,
  % keyword style
  keywordstyle=\color{mymauve},
  % the language of the code
  language=C,  
  % if you want to add more keywords to the set
  otherkeywords={cd, sudo, mv, unzip, make, cp, mkdir, ls, cmake, cpp, apt-get, update, install, gcov, cppcheck},
  % where to put the line-numbers; possible values are (none, left, right)
  numbers=left,
  % how far the line-numbers are from the code
  numbersep=5pt,
  % the style that is used for the line-numbers
  numberstyle=\tiny\color{black},
  % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
  rulecolor=\color{white},
  % show spaces everywhere adding particular underscores; it overrides 'showstringspaces'
  showspaces=false,
  % underline spaces within strings only
  showstringspaces=false,
  % show tabs within strings adding particular underscores
  showtabs=false,
  % the step between two line-numbers. If it's 1, each line will be numbered
  stepnumber=1,
  % string literal style
  stringstyle=\color{mygreen},
  % sets default tabsize to 2 spaces
  tabsize=2,
  % show the filename of files included with \lstinputlisting; also try caption instead of title
  title=\lstname, 
}


% Some Computer Society conferences also require the compsoc mode option,
% but others use the standard conference format.
%
% If IEEEtran.cls has not been installed into the LaTeX system files,
% manually specify the path to it like:
% \documentclass[conference]{../sty/IEEEtran}





% Some very useful LaTeX packages include:2
% (uncomment the ones you want to load)


% *** MISC UTILITY PACKAGES ***
%
%\usepackage{ifpdf}
% Heiko Oberdiek's ifpdf.sty is very useful if you need conditional
% compilation based on whether the output is pdf or dvi.
% usage:
% \ifpdf
%   % pdf code
% \else
%   % dvi code
% \fi
% The latest version of ifpdf.sty can be obtained from:
% http://www.ctan.org/tex-archive/macros/latex/contrib/oberdiek/
% Also, note that IEEEtran.cls V1.7 and later provides a builtin
% \ifCLASSINFOpdf conditional that works the same way.
% When switching from latex to pdflatex and vice-versa, the compiler may
% have to be run twice to clear warning/error messages.






% *** CITATION PACKAGES ***
%
%\usepackage{cite}
% cite.sty was written by Donald Arseneau
% V1.6 and later of IEEEtran pre-defines the format of the cite.sty package
% \cite{} output to follow that of IEEE. Loading the cite package will
% result in citation numbers being automatically sorted and properly
% "compressed/ranged". e.g., [1], [9], [2], [7], [5], [6] without using
% cite.sty will become [1], [2], [5]--[7], [9] using cite.sty. cite.sty's
% \cite will automatically add leading space, if needed. Use cite.sty's
% noadjust option (cite.sty V3.8 and later) if you want to turn this off
% such as if a citation ever needs to be enclosed in parenthesis.
% cite.sty is already installed on most LaTeX systems. Be sure and use
% version 5.0 (2009-03-20) and later if using hyperref.sty.
% The latest version can be obtained at:
% http://www.ctan.org/tex-archive/macros/latex/contrib/cite/
% The documentation is contained in the cite.sty file itself.






% *** GRAPHICS RELATED PACKAGES ***
%
\ifCLASSINFOpdf
  % \usepackage[pdftex]{graphicx}
  % declare the path(s) where your graphic files are
  % \graphicspath{{../pdf/}{../jpeg/}}
  % and their extensions so you won't have to specify these with
  % every instance of \includegraphics
  % \DeclareGraphicsExtensions{.pdf,.jpeg,.png}
\else
  % or other class option (dvipsone, dvipdf, if not using dvips). graphicx
  % will default to the driver specified in the system graphics.cfg if no
  % driver is specified.
  % \usepackage[dvips]{graphicx}
  % declare the path(s) where your graphic files are
  % \graphicspath{{../eps/}}
  % and their extensions so you won't have to specify these with
  % every instance of \includegraphics
  % \DeclareGraphicsExtensions{.eps}
\fi
% graphicx was written by David Carlisle and Sebastian Rahtz. It is
% required if you want graphics, photos, etc. graphicx.sty is already
% installed on most LaTeX systems. The latest version and documentation
% can be obtained at: 
% http://www.ctan.org/tex-archive/macros/latex/required/graphics/
% Another good source of documentation is "Using Imported Graphics in
% LaTeX2e" by Keith Reckdahl which can be found at:
% http://www.ctan.org/tex-archive/info/epslatex/
%
% latex, and pdflatex in dvi mode, support graphics in encapsulated
% postscript (.eps) format. pdflatex in pdf mode supports graphics
% in .pdf, .jpeg, .png and .mps (metapost) formats. Users should ensure
% that all non-photo figures use a vector format (.eps, .pdf, .mps) and
% not a bitmapped formats (.jpeg, .png). IEEE frowns on bitmapped formats
% which can result in "jaggedy"/blurry rendering of lines and letters as
% well as large increases in file sizes.
%
% You can find documentation about the pdfTeX application at:
% http://www.tug.org/applications/pdftex





% *** MATH PACKAGES ***
%
%\usepackage[cmex10]{amsmath}
% A popular package from the American Mathematical Society that provides
% many useful and powerful commands for dealing with mathematics. If using
% it, be sure to load this package with the cmex10 option to ensure that
% only type 1 fonts will utilized at all point sizes. Without this option,
% it is possible that some math symbols, particularly those within
% footnotes, will be rendered in bitmap form which will result in a
% document that can not be IEEE Xplore compliant!
%
% Also, note that the amsmath package sets \interdisplaylinepenalty to 10000
% thus preventing page breaks from occurring within multiline equations. Use:
%\interdisplaylinepenalty=2500
% after loading amsmath to restore such page breaks as IEEEtran.cls normally
% does. amsmath.sty is already installed on most LaTeX systems. The latest
% version and documentation can be obtained at:
% http://www.ctan.org/tex-archive/macros/latex/required/amslatex/math/





% *** SPECIALIZED LIST PACKAGES ***
%
%\usepackage{algorithmic}
% algorithmic.sty was written by Peter Williams and Rogerio Brito.
% This package provides an algorithmic environment fo describing algorithms.
% You can use the algorithmic environment in-text or within a figure
% environment to provide for a floating algorithm. Do NOT use the algorithm
% floating environment provided by algorithm.sty (by the same authors) or
% algorithm2e.sty (by Christophe Fiorio) as IEEE does not use dedicated
% algorithm float types and packages that provide these will not provide
% correct IEEE style captions. The latest version and documentation of
% algorithmic.sty can be obtained at:
% http://www.ctan.org/tex-archive/macros/latex/contrib/algorithms/
% There is also a support site at:
% http://algorithms.berlios.de/index.html
% Also of interest may be the (relatively newer and more customizable)
% algorithmicx.sty package by Szasz Janos:
% http://www.ctan.org/tex-archive/macros/latex/contrib/algorithmicx/




% *** ALIGNMENT PACKAGES ***
%
%\usepackage{array}
% Frank Mittelbach's and David Carlisle's array.sty patches and improves
% the standard LaTeX2e array and tabular environments to provide better
% appearance and additional user controls. As the default LaTeX2e table
% generation code is lacking to the point of almost being broken with
% respect to the quality of the end results, all users are strongly
% advised to use an enhanced (at the very least that provided by array.sty)
% set of table tools. array.sty is already installed on most systems. The
% latest version and documentation can be obtained at:
% http://www.ctan.org/tex-archive/macros/latex/required/tools/


% IEEEtran contains the IEEEeqnarray family of commands that can be used to
% generate multiline equations as well as matrices, tables, etc., of high
% quality.




% *** SUBFIGURE PACKAGES ***
%\ifCLASSOPTIONcompsoc
%  \usepackage[caption=false,font=normalsize,labelfont=sf,textfont=sf]{subfig}
%\else
%  \usepackage[caption=false,font=footnotesize]{subfig}
%\fi
% subfig.sty, written by Steven Douglas Cochran, is the modern replacement
% for subfigure.sty, the latter of which is no longer maintained and is
% incompatible with some LaTeX packages including fixltx2e. However,
% subfig.sty requires and automatically loads Axel Sommerfeldt's caption.sty
% which will override IEEEtran.cls' handling of captions and this will result
% in non-IEEE style figure/table captions. To prevent this problem, be sure
% and invoke subfig.sty's "caption=false" package option (available since
% subfig.sty version 1.3, 2005/06/28) as this is will preserve IEEEtran.cls
% handling of captions.
% Note that the Computer Society format requires a larger sans serif font
% than the serif footnote size font used in traditional IEEE formatting
% and thus the need to invoke different subfig.sty package options depending
% on whether compsoc mode has been enabled.
%
% The latest version and documentation of subfig.sty can be obtained at:
% http://www.ctan.org/tex-archive/macros/latex/contrib/subfig/




% *** FLOAT PACKAGES ***
%
%\usepackage{fixltx2e}
% fixltx2e, the successor to the earlier fix2col.sty, was written by
% Frank Mittelbach and David Carlisle. This package corrects a few problems
% in the LaTeX2e kernel, the most notable of which is that in current
% LaTeX2e releases, the ordering of single and double column floats is not
% guaranteed to be preserved. Thus, an unpatched LaTeX2e can allow a
% single column figure to be placed prior to an earlier double column
% figure. The latest version and documentation can be found at:
% http://www.ctan.org/tex-archive/macros/latex/base/


%\usepackage{stfloats}
% stfloats.sty was written by Sigitas Tolusis. This package gives LaTeX2e
% the ability to do double column floats at the bottom of the page as well
% as the top. (e.g., "\begin{figure*}[!b]" is not normally possible in
% LaTeX2e). It also provides a command:
%\fnbelowfloat
% to enable the placement of footnotes below bottom floats (the standard
% LaTeX2e kernel puts them above bottom floats). This is an invasive package
% which rewrites many portions of the LaTeX2e float routines. It may not work
% with other packages that modify the LaTeX2e float routines. The latest
% version and documentation can be obtained at:
% http://www.ctan.org/tex-archive/macros/latex/contrib/sttools/
% Do not use the stfloats baselinefloat ability as IEEE does not allow
% \baselineskip to stretch. Authors submitting work to the IEEE should note
% that IEEE rarely uses double column equations and that authors should try
% to avoid such use. Do not be tempted to use the cuted.sty or midfloat.sty
% packages (also by Sigitas Tolusis) as IEEE does not format its papers in
% such ways.
% Do not attempt to use stfloats with fixltx2e as they are incompatible.
% Instead, use Morten Hogholm'a dblfloatfix which combines the features
% of both fixltx2e and stfloats:
%
% \usepackage{dblfloatfix}
% The latest version can be found at:
% http://www.ctan.org/tex-archive/macros/latex/contrib/dblfloatfix/




% *** PDF, URL AND HYPERLINK PACKAGES ***
%
%\usepackage{url}
% url.sty was written by Donald Arseneau. It provides better support for
% handling and breaking URLs. url.sty is already installed on most LaTeX
% systems. The latest version and documentation can be obtained at:
% http://www.ctan.org/tex-archive/macros/latex/contrib/url/
% Basically, \url{my_url_here}.




% *** Do not adjust lengths that control margins, column widths, etc. ***
% *** Do not use packages that alter fonts (such as pslatex).         ***
% There should be no need to do such things with IEEEtran.cls V1.6 and later.
% (Unless specifically asked to do so by the journal or conference you plan
% to submit to, of course. )


% correct bad hyphenation here
\hyphenation{op-tical net-works semi-conduc-tor}


\begin{document}
%
% paper title
% Titles are generally capitalized except for words such as a, an, and, as,
% at, but, by, for, in, nor, of, on, or, the, to and up, which are usually
% not capitalized unless they are the first or last word of the title.
% Linebreaks \\ can be used within to get better formatting as desired.
% Do not put math or special symbols in the title.
\title{Teste automatizado de algoritmos atrav\'es de assertivas e da framework da Google\textregistered}


% author names and affiliations
% use a multiple column layout for up to three different
% affiliations
\author{\IEEEauthorblockN{Rodrigo Ferreira Guimar\~aes}
\IEEEauthorblockA{Departamento de Ci\^encia de Computa\c{c}\~ao e Faculdade de Tecnologia\\
Universidade de Bras\'ilia, Bras\'ilia\\
Matr\'icula 14/0170740\\
Email: rodrigofegui@aluno.unb.br}
}

% conference papers do not typically use \thanks and this command
% is locked out in conference mode. If really needed, such as for
% the acknowledgment of grants, issue a \IEEEoverridecommandlockouts
% after \documentclass

% for over three affiliations, or if they all won't fit within the width
% of the page, use this alternative format:
% 
%\author{\IEEEauthorblockN{Michael Shell\IEEEauthorrefmark{1},
%Homer Simpson\IEEEauthorrefmark{2},
%James Kirk\IEEEauthorrefmark{3}, 
%Montgomery Scott\IEEEauthorrefmark{3} and
%Eldon Tyrell\IEEEauthorrefmark{4}}
%\IEEEauthorblockA{\IEEEauthorrefmark{1}School of Electrical and Computer Engineering\\
%Georgia Institute of Technology,
%Atlanta, Georgia 30332--0250\\ Email: see http://www.michaelshell.org/contact.html}
%\IEEEauthorblockA{\IEEEauthorrefmark{2}Twentieth Century Fox, Springfield, USA\\
%Email: homer@thesimpsons.com}
%\IEEEauthorblockA{\IEEEauthorrefmark{3}Starfleet Academy, San Francisco, California 96678-2391\\
%Telephone: (800) 555--1212, Fax: (888) 555--1212}
%\IEEEauthorblockA{\IEEEauthorrefmark{4}Tyrell Inc., 123 Replicant Street, Los Angeles, California 90210--4321}}




% use for special paper notices
%\IEEEspecialpapernotice{(Invited Paper)}




% make the title area
\maketitle

% As a general rule, do not put math, special symbols or citations
% in the abstract
%\begin{abstract}
%The abstract goes here.
%\end{abstract}

% no keywords




% For peer review papers, you can put extra information on the cover
% page as needed:
% \ifCLASSOPTIONpeerreview
% \begin{center} \bfseries EDICS Category: 3-BBND \end{center}
% \fi
%
% For peerreview papers, this IEEEtran command inserts a page break and
% creates the second title. It will be ignored for other modes.
\IEEEpeerreviewmaketitle



\section{Introdu\c{c}\~ao}
Este trabalho trata da aplica\c{c}\~ao de testes automatizados para as fun\c{c}\~oes respons\'aveis pela manipula\c{c}\~ao da estrutura de dados denominada~\textit{pilha}, tanto na sua implementa\c{c}\~ao como vetor como lista encadeada.

Ser\~ao expostos os passos para a execu\c{c}\~ao do trabalho como um todo, desde a instala\c{c}\~ao do gtest at\'e a execu\c{c}\~ao do~\textit{cppcheck} (considerado como o \'ultimo passo do trabalho). 
 
%\hfill 12 de Setembro, 2015


% An example of a floating figure using the graphicx package.
% Note that \label must occur AFTER (or within) \caption.
% For figures, \caption should occur after the \includegraphics.
% Note that IEEEtran v1.7 and later has special internal code that
% is designed to preserve the operation of \label within \caption
% even when the captionsoff option is in effect. However, because
% of issues like this, it may be the safest practice to put all your
% \label just after \caption rather than within \caption{}.
%
% Reminder: the "draftcls" or "draftclsnofoot", not "draft", class
% option should be used if it is desired that the figures are to be
% displayed while in draft mode.
%
%\begin{figure}[!t]
%\centering
%\includegraphics[width=2.5in]{myfigure}
% where an .eps filename suffix will be assumed under latex, 
% and a .pdf suffix will be assumed for pdflatex; or what has been declared
% via \DeclareGraphicsExtensions.
%\caption{Simulation results for the network.}
%\label{fig_sim}
%\end{figure}

% Note that IEEE typically puts floats only at the top, even when this
% results in a large percentage of a column being occupied by floats.


% An example of a double column floating figure using two subfigures.
% (The subfig.sty package must be loaded for this to work.)
% The subfigure \label commands are set within each subfloat command,
% and the \label for the overall figure must come after \caption.
% \hfil is used as a separator to get equal spacing.
% Watch out that the combined width of all the subfigures on a 
% line do not exceed the text width or a line break will occur.
%
%\begin{figure*}[!t]
%\centering
%\subfloat[Case I]{\includegraphics[width=2.5in]{box}%
%\label{fig_first_case}}
%\hfil
%\subfloat[Case II]{\includegraphics[width=2.5in]{box}%
%\label{fig_second_case}}
%\caption{Simulation results for the network.}
%\label{fig_sim}
%\end{figure*}
%
% Note that often IEEE papers with subfigures do not employ subfigure
% captions (using the optional argument to \subfloat[]), but instead will
% reference/describe all of them (a), (b), etc., within the main caption.
% Be aware that for subfig.sty to generate the (a), (b), etc., subfigure
% labels, the optional argument to \subfloat must be present. If a
% subcaption is not desired, just leave its contents blank,
% e.g., \subfloat[].


% An example of a floating table. Note that, for IEEE style tables, the
% \caption command should come BEFORE the table and, given that table
% captions serve much like titles, are usually capitalized except for words
% such as a, an, and, as, at, but, by, for, in, nor, of, on, or, the, to
% and up, which are usually not capitalized unless they are the first or
% last word of the caption. Table text will default to \footnotesize as
% IEEE normally uses this smaller font for tables.
% The \label must come after \caption as always.
%
%\begin{table}[!t]
%% increase table row spacing, adjust to taste
%\renewcommand{\arraystretch}{1.3}
% if using array.sty, it might be a good idea to tweak the value of
% \extrarowheight as needed to properly center the text within the cells
%\caption{An Example of a Table}
%\label{table_example}
%\centering
%% Some packages, such as MDW tools, offer better commands for making tables
%% than the plain LaTeX2e tabular which is used here.
%\begin{tabular}{|c||c|}
%\hline
%One & Two\\
%\hline
%Three & Four\\
%\hline
%\end{tabular}
%\end{table}


% Note that the IEEE does not put floats in the very first column
% - or typically anywhere on the first page for that matter. Also,
% in-text middle ("here") positioning is typically not used, but it
% is allowed and encouraged for Computer Society conferences (but
% not Computer Society journals). Most IEEE journals/conferences use
% top floats exclusively. 
% Note that, LaTeX2e, unlike IEEE journals/conferences, places
% footnotes above bottom floats. This can be corrected via the
% \fnbelowfloat command of the stfloats package.


\section{Embasamento Te\'orico}
Para que haja um correto entendimento sobre o desenvolvimento deste projeto \'e importante abordar alguns aspectos relevantes, sendo eles descritos nas subse\c{c}\~oes a seguir.

Vale ressaltar que os comandos executados nos blocos s\~ao referentes \`a execu\c{c}\~ao deste trabalho, podendo haver mudan\c{c}as para outros trabalho. Onde estiver escrito ``\t'', nos blocos, \'e apenas um espa\c{c}o entre a linha anterior e a linha atual, pois, devido ao espa\c{c}o de exibi\c{c}\~ao os c\'odigos podem ficar al\'em da \'area devida.

\subsection{Gtest}
O~\textit{Gtest}\cite{gtest}~\'e uma~\textit{framework} da Google escrita para realizar testes de algoritmos em linguagem de programa\c{c}\~ao C++, em v\'arias plataformas - baseado na arquitetura ~\textit{xUnit}. Possui suportes para testes automatizados, configura\c{c}\~oes de assertivas, defini\c{c}\~oes de assertivas, testes fatais, dentre outras coisas.

Fa\c{c}a o~\textit{download}, disponibilizado no~\textit{site} do~\textit{gtest}, do arquivo~\textit{gtest-``\'ultima vers\~ao''.zip}, ap\'os isso abra o terminal e execute os comandos como mostrados no bloco~\textit{Instalacao\_Gtest}.

\lstinputlisting[float=h]{Instalacao_Gtest}

Ao seguir esses passos o~\textit{gtest} ser\'a instalado num diret\'orio que apenas usu\'ario~\textit{root}, administrador, poder\'a manipular.

Para que seja poss\'ivel a utiliza\c{c}\~ao do~\textit{gtest} para um programa expec\'ifico, \'e importante cria\c{c}\~ao de um arquivo cmake, para a automatiza\c{c}\~ao das opera\c{c}\~oes, como demostrado no bloco~\textit{CMakeLists.txt}.

\lstinputlisting[float=h]{CMakeLists.txt}

Para a execu\c{c}\~ao do~\textit{gtest} \'e necess\'ario seguir os comandos mostrados no bloco~\textit{Executando\_Gtest}.

\lstinputlisting[float=h]{Executando_Gtest}


\subsection{Gcov}
Tamb\'em foi utilizado o programa~\textit{Gcov}~\cite{gcov}, que \'e um programa que oferece cobertura para testes. Sendo poss\'ivel utiliz\'a-lo como uma ferramenta de an\'alise para ajudar a descobrir onde aplicar uma otimiza\c{c}\~ao de processamento, por exemplo.

Para que haja a execu\c{c}\~ao do gcov, juntamente com o~\textit{gtest}, \'e preciso acrescentar~\textit{flags} para a execu\c{c}\~ao, sendo elas descritas no bloco~\textit{Acrescentando\_Gcov}.

\lstinputlisting[float=h]{Acrescentando_Gcov}

Para a execu\c{c}\~ao do~\textit{gcov} s\~ao necess\'arios os passos descritos no bloco~\textit{Executando\_Gcov}.

\lstinputlisting[float=h]{Executando_Gcov}


\subsection{CppCheck}
Em paralelo \`a utiliza\c{c}\~ao do~\textit{gtes} e do~\textit{gcov}, tamb\'em foi utilizado a ferramenta~\textit{cppcheck}.

O~\textit{CppCheck}~\cite{cppcheck} \'e uma ferramenta de an\'alise est\'atica para c\'odigos C/C++ que foca em analisar o que os compiladores, e muitas outras ferramenteas de an\'alise, n\~ao detectam: falsos positivos.

H\'a a necessidade de instala\c{c}\~ao do~\textit{cppcheck} e para tanto \'e necess\'ario seguir os comandos do bloco~\textit{Instalacao\_Cppcheck}.

\lstinputlisting[float=h]{Instalacao_Cppcheck}

A fim de executar o~\textit{cppcheck} sobre os c\'odigos desenvolvidos, seguir os comandos no bloco~\textit{Executando\_Cppcheck}.

\lstinputlisting[float=h]{Executando_Cppcheck}

\subsection{Assertivas}
Assertivas s\~ao express\~oes l\'ogicas envolvendo dados e estados manipulados, podendo ser definidas em n\'iveis de abstra\c{c}\~ao:

\begin{itemize}
 \item~\textbf{\textit{Fun\c{c}\~oes}}: devem estar satisfeitas em determinados pontos do corpo da fun\c{c}\~ao, comumente denominadas assertivas de~\textit{entrada} e de~\textit{sa\'ida};
 \item \textbf{\textit{Classes e M\'odulos}}: devem estar satisfeitas ao entrar e ao retornar de fun\c{c}\~oes, assertivas~\textit{invariantes} e~\textit{estruturais};
 \item \textbf{\textit{Programas}}: devem estar satisfeitas para os dados persistentes.
\end{itemize}

Podendo ser utilizadas para para a especificica\c{c}\~ao de fun\c{c}\~oes - com o desenvolvimento dirigido por contratos -, argumenta\c{c}\~ao de corretude de programas - atrav\'es dos predicados da argumenta\c{c}\~ao -, depura\c{c}\~ao - facilitando a completa e correta remo\c{c}\~ao de defeitos -, dentre outras.


\section{Resultados}
Com a base te\'orica constru\'ida \'e poss\'ivel apresentar os resultados dos testes. Ser\'a apresentado os resultados sujeitos ao padr\~ao: nome da fun\c{c}\~ao; par\^ametros de entrada e seus significados; especifica\c{c}\~ao da fun\c{c}\~ao; para uma dada entrada, qual a sa\'ida esperada; cr\'iterio de aprova\c{c}\~ao; e se a fun\c{c}\~ao passou no teste desenvolvido.

Como h\'a duas formas de implementa\c{c}\~ao da pilha, logo estas partes ser\~ao expostas separadamente.

\subsection{Implementada como Vetor}
Esta se\c{c}\~ao \'e dedicada ao desenvolvimento do trabalho analisando a implementa\c{c}\~ao da pilha como um vetor, que tem tamanho fixo. Dessa forma, tem-se as fun\c{c}\~oes como descritas a seguir.

\subsubsection{Cria\c{c}\~ao}
Para que haja o manuseio da pilha \'e importante que ocorra a cria\c{c}\~ao da mesma, logo esta fun\c{c}\~ao tem a finalidade de conseguir alocar um espa\c{c}o na mem\'oria para o vetor a inserido a lista, com isso, considerando a sua forma de implementa\c{c}\~ao, tem-se o prot\'otipo:
$$bool\ criar\ (int\ tam); $$
A partir disso, atribui-se \`a vari\'avel $tam$ o tamanho do vetor a ser alocado, havendo a ressalva (atrav\'es de uma assertiva de entrada) de que o valor deve ser maior e igual a $1$, pois n\~ao h\'a vetor com $-10$ posi\c{c}\~oes, por exemplo. H\'a o retorno de um estado l\'ogico positivo se a aloca\c{c}\~ao foi bem sucedida, sendo isto avaliado da seguinte forma: se antes de um dado limite de tentativas, uma mem\'oria for alocada, ent\~ao houve sucesso, caso contr\'ario n\~ao houve.

O teste sobre est\'a fun\c{c}\~ao foi subdividido em duas parte: a primeira com a tentativa da cria\c{c}\~ao com um n\'umero menor do que $1$ e a segunda com um valor inteiro positivo qualquer; como previsto, a assertiva fez com que o programa fosse encerrado para o primeiro teste, visto que foi violada a condi\c{c}\~ao b\'asica, enquanto que para a segunda houve o retorno do estado l\'ogico positivo. Dessa forma, a fun\c{c}\~ao passou no teste.

\subsubsection{Inser\c{c}\~ao}
Para a fun\c{c}\~ao de inser\c{c}\~ao tem-se o prot\'otipo:
$$int\ inserir\ (int\ info)$$
A partir disso, atribui-se \`a vari\'avel $info$ a informa\c{c}\~ao a ser inserida na pilha, havendo as ressalvas: a pilha j\'a deve estar alocada e a pilha n\~ao pode estar cheia, ou seja, deve haver, pelo menos, uma posi\c{c}\~ao livre no vetor. Passando pelas assertivas de entrada, h\'a o retorno do pr\'oprio valor inserido, pois este ser\'a comparado com o valor registrado no topo da pilha.

O teste foi subdividido em tr\^es partes: a primeira consiste em tentar inserir sem ter a pilha alocada, a segunda uma inser\c{c}\~ao em condi\c{c}\~oes normais de trabaho e a terceira tentando inserir elemento al\'em da capacidade da pilha; como previsto, para o primeiro caso houve o retorno de condi\c{c}\~ao falsa, visto que o vetor n\~ao tinha sido alocado, para a segunda tamb\'em teve \^exito, pois o valor retornado coincidiu com o valor registrado no topo e para o \'ultimo caso, tamb\'em houve \^exito, pois retornou o valor falso, uma vez que o vetor j\'a estava cheio.

\subsubsection{Remo\c{c}\~ao}
Para a fun\c{c}\~ao de remo\c{c}\~ao tem-se o prot\'otipo:
$$int\ remover ()$$
A partir disso, percebe-se que n\~ao h\'a necessidade de par\^ametros de entrada, embora haja assertivas de entrada: a pilha deve estar alocada e n\~ao deve estar vazia; passando por esta etapa, h\'a o decremento do topo
e o retorno do valor que estava no topo.

O teste foi subdividido em duas partes an\'alogo \`a inser\c{c}\~ao, mas respeitando as assertivas da remo\c{c}\~ao.

\subsubsection{Topo}
Para a fun\c{c}\~ao de visualiza\c{c}\~ao do topo tem-se o prot\'otipo:
$$int\ topo ()$$
Possui as mesmas caracter\'isticas que a remo\c{c}\~ao, divergindo apenas quanto ao decremento do topo, pois o mesmo eh mantido.

\subsection{Implementada como Lista Encadeada}
Esta se\c{c}\~ao \'e dedicada ao desenvolvimento do trabalho analisando a implementa\c{c}\~ao da pilha como uma lista encadeada. Dessa forma, tem-se as fun\c{c}\~oes como descritas a seguir.

\subsubsection{Cria\c{c}\~ao}
Tem-se a fun\c{c}\~ao para cria\c{c}\~ao da pilha, pelo mesmo motivo da implementa\c{c}\~ao como vetor, mas, principalmente, pela correta inicializa\c{c}\~ao das vari\'aveis de controle da pilha., sendo que est\'a possui o seguinte prot\'otipo:
$$bool\ criar\ ()$$
A partir disso, percebe-se que n\~ao h\'a a necessidade da atribui\c{c}\~ao de par\^ametros para fun\c{c}\~ao; h\'a apenas o uso de uma assertiva de sa\'ida para garantir que o ponteiro foi inicializado corretamente, sendo positivo h\'a o retorno do estado positivo, caso contr\'ario do negativo.


\subsection{Semelhantes}
H\'a fun\c{c}\~oes que possuem o mesmo procedimento de teste, com passos semelhantes a serem seguidos, dentre elas: a inser\c{c}\~ao, a remo\c{c}\~ao e o retorno do topo. Estas possuem os mesmos prot\'otipos e caracter\'isticas semelhantes, quanto ao desenvolvimento dos testes.

Ocorre diferen\c{c}a na fun\~ao de inser\c{c}\~ao, uma vez que \'e poss\'ivel inserir elementos na pilha antes de uma cria\c{c}\~ao formal da pilha, ou seja, as vari\'aveis de controle n\~ao transmitem a realidade quanto seu  estado corrente.

\subsubsection{Remo\c{c}\~ao}

\subsubsection{Topo}

\section{Conclus\~ao}





% trigger a \newpage just before the given reference
% number - used to balance the columns on the last page
% adjust value as needed - may need to be readjusted if
% the document is modified later
%\IEEEtriggeratref{8}
% The "triggered" command can be changed if desired:
%\IEEEtriggercmd{\enlargethispage{-5in}}

% references section

% can use a bibliography generated by BibTeX as a .bbl file
% BibTeX documentation can be easily obtained at:
% http://www.ctan.org/tex-archive/biblio/bibtex/contrib/doc/
% The IEEEtran BibTeX style support page is at:
% http://www.michaelshell.org/tex/ieeetran/bibtex/
%\bibliographystyle{IEEEtran}
% argument is your BibTeX string definitions and bibliography database(s)
%\bibliography{IEEEabrv,../bib/paper}
%
% <OR> manually copy in the resultant .bbl file
% set second argument of \begin to the number of references
% (used to reserve space for the reference number labels box)
\begin{thebibliography}{1}

\bibitem{}
Gonzalez, Rafael C. e Woods, Richard E.,\emph{Digital Image Processing}, 3$^o$ ed,
Pearson Ed. - ISBN: 9780131687288. 

\bibitem{gtest}
GoogleTest. \emph{Google C++ Testing Framework}. Dispon\'ivel em: $https://code.google.com/p/googletest/$, acessado em 2015.

\bibitem{gcov}
Gcov. \emph{Gcov - A Test Coverage Program}. Dispon\'ivel em: $https://gcc.gnu.org/onlinedocs/gcc/Gcov.html$, acessado em 2015.

\bibitem{cppcheck}
Cppcheck. \emph{Cppcheck - A Tool for static C/C++ code analysi}. Dispon\'ivel em: $http://cppcheck.sourceforge.net/$, acessado em 2015.

\end{thebibliography}




% that's all folks
\end{document}