cmake_minimum_required(VERSION 2.6)
project(TrabF_MP)
enable_testing()
find_package (Threads)
message(STATUS GTEST_ROOT=$ENV{GTEST_ROOT})
include_directories($ENV{GTEST_ROOT}/include)
link_directories($ENV{GTEST_ROOT}/samples)

SET(GCC_COVERAGE_COMPILE_FLAGS "-fprofile-arcs -ftest-coverage -lncurses")
SET(GCC_COVERAGE_LINK_FLAGS    "-lgcov -lncurses")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}")
SET(CMAKE_CXX_OUTPUT_EXTENSION_REPLACE 1)

add_executable(TrabF_MP ../Fontes/Adaptacoes.cpp ../Fontes/Basica.cpp ../Fontes/Estruturas.cpp ../Fontes/Interconexao.cpp ../Fontes/Principal_T2_MP.cpp ../Fontes/Arquivos.cpp ../Fontes/Cidades.cpp ../Fontes/Geradores.cpp ../Fontes/Massa_teste.cpp ../Fontes/Rede.cpp ../Fontes/teste.cpp)
target_link_libraries(TrabF_MP gtest gtest_main)
target_link_libraries(TrabF_MP -lncurses ${CMAKE_THREAD_LIBS_INIT})
add_test(NAME TrabF_MP COMMAND TrabF_MP)

add_executable(TrabF_MP_t ../Fontes/Principal_Teste.cpp )
target_link_libraries(TrabF_MP_t gtest gtest_main)
target_link_libraries(TrabF_MP_t -lncurses ${CMAKE_THREAD_LIBS_INIT})
add_test(NAME TrabF_MP_t COMMAND TrabF_MP_t)
